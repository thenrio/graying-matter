
Commands
========

start http server
-----------------
    root@kaizen:/opt/nginx# apache2ctl stop
    root@kaizen:/opt/nginx# ./sbin/nginx

open http://conf.agile-france.org/ (il y a un lag ruby au lancement, comme sur heroku, ca peut se prÃ©chauffer en configuration passenger)

stop http server
----------------
    root@kaizen:/opt/nginx# ./sbin/nginx -s stop


deploy using git push
---------------------

    git remote rm kaizen
    git remote add kaizen git@kaizen.agilefrance.net:/srv/git/conference-on-rails.git
    git push kaizen master

### ssh ###

* have self.id_rsa.pub in ~git/.ssh/authorized_keys

      thenrio@kaizen:sudo cat ~/.ssh/id_rsa.pub >> ~git/.ssh/authorized_keys

### group ###
* be in git group

      thenrio@kaizen:/srv/ruby/conference-on-rails$ sudo usermod -aG git thenrio

restart server
--------------

    ssh kaizen touch /srv/ruby/conference-on-rails/tmp/restart.txt

mongo
=====
dump/restore
------------
    mongodump --db conference-on-rails-production --host kaizen
    mongorestore --drop dump/conference-on-rails-production

start/stop
----------
    /etc/init.d/mongodb start|stop|restart

    mongod --config /etc/mongodb.conf

log
---
    /var/log/mongodb

log
===
    /srv/ruby/conference-on-rails/production.log

it is rolling thanks to logrotate

Get environment
---------------

    ~/src/ruby/conference-on-rails/config/environments (master)$ scp -r heroku kaizen.agilefrance.net:/srv/ruby/conference-on-rails/config/environments

Install gems
------------

      bundle install --without development test

Add hook to bare repository
---------------------------

So that working copy is updated whenever bare is pushed

    #!/bin/sh
    export production=/srv/ruby/conference-on-rails
    echo "push detected, updating ${production}"
    (unset GIT_DIR && cd ${production} && git pull && bundle install)

=> bundle install is failing :( on kaizen #fail


make it executable
    chmod ug+x hooks/post-receive


see [there](http://stackoverflow.com/questions/4043609/getting-fatal-not-a-git-repository-when-using-post-update-hook-to-execute) for instance, there are many ways to skin a cat

remove apache from run levels
----------------------------

add nginx to run levels
-----------------------
cf [this article](http://articles.slicehost.com/2007/10/17/ubuntu-lts-adding-an-nginx-init-script)

WIP
===

    thenrio@kaizen:/etc/init$ cat /etc/init/nginx.conf
    description "nginx"

    start on (net-device-up and local-filesystems)
    stop on runlevel [016]

    expect fork
    exec /opt/nginx/sbin/nginx -c /opt/nginx/conf/nginx.conf
    respawn

One problem is passenger fails, unless it is **root** that start nginx ...
???!

Hence, init script is a FAIL

did not find what is bad, (what permission ??)

setup a git user
================

as described in [progit](http://progit.org/book/ch4-4.html)

Mere git remote show kaizen asked me for password ...
so bad, had bad permissions on .ssh dir and files :(

      git@kaizen:~$ chmod go-rwx -R .ssh
